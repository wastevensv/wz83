; Kernel Include File

; Macros
rkcall .equ 0x08
rlcall .equ 0x10
rpcall .equ 0x20

.macro kcall(addr)
    rst rkcall
    call addr
.endmacro
.macro kcall(cc, addr)
    rst rkcall
    call cc, addr
.endmacro
.macro kjp(addr)
    rst rkcall
    jp addr
.endmacro
.macro kjp(cc, addr)
    rst rkcall
    jp cc, addr
.endmacro
.macro kld(to, from)
    rst rkcall
    ld to, from
.endmacro

.macro lcall(id, addr)
    rst rlcall
    .db id
    call addr
.endmacro
.macro lcall(id, cc, addr)
    rst rlcall
    .db id
    call cc, addr
.endmacro
.macro ljp(id, addr)
    rst rlcall
    .db id
    jp addr
.endmacro
.macro ljp(id, cc, addr)
    rst rlcall
    .db id
    jp cc, addr
.endmacro
.macro lld(id, to, from)
    rst rlcall
    .db id
    ld to, from
.endmacro

.macro icall(addr)
    rst rlcall
    .db libId
    call addr
.endmacro
.macro icall(cc, addr)
    rst rlcall
    .db libId
    call cc, addr
.endmacro
.macro ijp(addr)
    rst rlcall
    .db libId
    jp addr
.endmacro
.macro ijp(cc, addr)
    rst rlcall
    .db libId
    jp cc, addr
.endmacro
.macro ild(to, from)
    rst rlcall
    .db libId
    ld to, from
.endmacro

.macro pcall(function)
    .if function & 0xFF
        rst rpcall
        .dw function
    .else
        call 0x4000 - (((function >> 8) + 1) * 3)
    .endif
.endmacro
.macro pcall(flags, function)
    .if function & 0xFF
        jr flags, $+4
        jr $+5
        rst rpcall
        .dw function
    .else
        call flags, 0x4000 - (((function >> 8) + 1) * 3)
    .endif
.endmacro
; /Macros

; Keypad codes
kDown               .equ 0x01
kLeft               .equ 0x02
kRight              .equ 0x03
kUp                 .equ 0x04
kEnter              .equ 0x09 \kEntry .equ 0x09 \kSolve .equ 0x09
kPlus               .equ 0x0A \kMem .equ 0x0A \kQuote .equ 0x0A
kMinus              .equ 0x0B \kLSqBracket .equ 0x0B \kW .equ 0x0B
kMul                .equ 0x0C \kRSqBracket .equ 0x0C \kR .equ 0x0C
kDiv                .equ 0x0D \kVarE .equ 0x0D \kM .equ 0x0D
kPower              .equ 0x0E \kPi .equ 0x0E \kH .equ 0x0E
kClear              .equ 0x0F
kChs                .equ 0x11 \kNeg .equ 0x11 \kAns .equ 0x11 \kQuestion .equ 0x11
k3                  .equ 0x12 \kTheta .equ 0x12 \kL3 .equ 0x12
k6                  .equ 0x13 \kL6 .equ 0x13 \kV .equ 0x13
k9                  .equ 0x14 \kVarW .equ 0x14 \kQ .equ 0x14
kRParen             .equ 0x15 \kRBrace .equ 0x15 \kL .equ 0x15
kTan                .equ 0x16 \kInvTan .equ 0x16 \kG .equ 0x16
kVars               .equ 0x17 \kDistr .equ 0x17
kDecPnt             .equ 0x19 \kDot .equ 0x19 \kPeriod .equ 0x19 \kVarI .equ 0x19 \kImaginary .equ 0x19 \kColon .equ 0x19
k2                  .equ 0x1A \kL2 .equ 0x1A \kZ .equ 0x1A
k5                  .equ 0x1B \kL5 .equ 0x1B \kU .equ 0x1B
k8                  .equ 0x1C \kVarV .equ 0x1C \kP .equ 0x1C
kLParen             .equ 0x1D \kLBrace .equ 0x1D \kK .equ 0x1D
kCos                .equ 0x1E \kInvCos .equ 0x1E \kF .equ 0x1E
kPrgm               .equ 0x1F \kDraw .equ 0x1F \kC .equ 0x1F
kStat               .equ 0x20 \kList .equ 0x20
k0                  .equ 0x21 \kCatalog .equ 0x21 \kSpace .equ 0x21
k1                  .equ 0x22 \kL1 .equ 0x22 \kY .equ 0x22
k4                  .equ 0x23 \kL4 .equ 0x23 \kT .equ 0x23
k7                  .equ 0x24 \kVarU .equ 0x24 \kO .equ 0x24
kComma              .equ 0x25 \kEE .equ 0x25 \kJ .equ 0x25
kSin                .equ 0x26 \kInvSin .equ 0x26 \kE .equ 0x26
kApps	            .equ 0x27 \kAngle .equ 0x27 \kB .equ 0x27
kGraphvar           .equ 0x28 \kXTThetaN .equ 0x28 \kLink .equ 0x28
kStore              .equ 0x2A \kRcl .equ 0x2A \kX .equ 0x2A
kLn                 .equ 0x2B \kEx .equ 0x2B \kS .equ 0x2B
kLog                .equ 0x2C \k10x .equ 0x2C \kN .equ 0x2C
kSquare             .equ 0x2D \kXSqu .equ 0x2D \kSqRoot .equ 0x2D \kI .equ 0x2D
kRecip              .equ 0x2E \kXNeg .equ 0x2E \kMatrix .equ 0x2E \kD .equ 0x2E
kMath               .equ 0x2F \kA .equ 0x2F \kTest .equ 0x2F
kAlpha              .equ 0x30 \kALock .equ 0x30
kGraph              .equ 0x31 \kTable .equ 0x31 \kF5 .equ 0x31
kTrace              .equ 0x32 \kCalc .equ 0x32 \kF4 .equ 0x32
kZoom               .equ 0x33 \kFormat .equ 0x33 \kF3 .equ 0x33
kWindow             .equ 0x34 \kTblSet .equ 0x34 \kTableSet .equ 0x34 \kF2 .equ 0x34
kYEqu               .equ 0x35 \kStatPlot .equ 0x35 \kF1 .equ 0x35
k2nd                .equ 0x36
kMode               .equ 0x37 \kQuite .equ 0x37
kDel                .equ 0x38 \kIns .equ 0x38 \kDelete .equ 0x38

; Mathematical constants

FP_ZERO         .equ 0
FP_ONE          .equ 1
FP_PI           .equ 2
FP_PI_OVER_2    .equ 3
FP_PI_OVER_4    .equ 4
FP_PI_OVER_180  .equ 5
FP_180_OVER_PI  .equ 6
FP_E            .equ 7
FP_LOG_E        .equ 8
FP_LN_10        .equ 9

; Set to use , as the decimal point and . for digit grouping
FP_STR_INV_PUNC     .equ 1<<7
FP_GROUP_DIGITS     .equ 1<<6
FP_DISP_NORMAL      .equ 0
FP_DISP_SCIENTIFIC  .equ 1<<4

; The rest of this file was generated by a tool.
nullThread              .equ 0xFF
errOutOfMem             .equ 1
errTooManyThreads       .equ 2
errStreamNotFound       .equ 3
errEndOfStream          .equ 4
errFileNotFound         .equ 5
errTooManyStreams       .equ 6
errNoSuchThread         .equ 7
errTooManyLibraries     .equ 8
errUnsupported          .equ 9
errTooManySignals       .equ 10
errFilesystemFull       .equ 11
errNameTooLong          .equ 12
errAlreadyExists        .equ 13
errNoMagic              .equ 14
errNoHeader             .equ 15
errNoEntryPoint         .equ 15
errKernelMismatch       .equ 15
errMutexNotLocked       .equ 16
errReadOnly             .equ 17
errNotAFile             .equ 18
errNotADirectory        .equ 18

threadRangeMask         .equ 0b11111

; Filesystem stuff
fsEndOfTable            .equ 0xFF
fsFile                  .equ 0x7F
fsDirectory             .equ 0xBF
fsSymLink               .equ 0xDF
fsDeletedFile           .equ 0x00
fsModifiedFile          .equ 0x01
fsDeletedDirectory      .equ 0x02
fsModifiedDirectory     .equ 0x04
fsDeletedSymLink        .equ 0x08

panic_init_not_found    .equ 0
panic_no_threads        .equ 1
panic_no_active_threads .equ 2
panic_library_not_found .equ 3

; KEXC headers
; 0x00-0x7F reserved for kernel use
; 0x80-0xFF available for arbituary use
KEXC_HEADER_END         .equ 0x00
KEXC_ENTRY_POINT        .equ 0x01
KEXC_STACK_SIZE         .equ 0x02
KEXC_KERNEL_VER         .equ 0x03
KEXC_THREAD_FLAGS       .equ 0x04
KEXC_NAME               .equ 0x05
KEXC_DESCRIPTION        .equ 0x06

; Thread flags
THREAD_NON_SUSPENDABLE  .equ 2
;THREAD_IS_SUSPENDED    .equ 4 ; Not a public flag
THREAD_COLOR            .equ 8
; Describes kernel memory layout

kernelVersion           .equ 0x64

; Modify these values to automatically modify memory layout
maxThreads              .equ 32
maxLibraries            .equ 16
maxSignals              .equ 16
maxFileStreams          .equ 8
kernelGarbageSize       .equ 0x200
flashFunctionSize       .equ 0x100
stateMemorySize         .equ 0x100

kernelMem .equ 0x8000

threadTable             .equ kernelMem
threadTableSize         .equ 8 * maxThreads             ; 8 bytes per entry

libraryTable            .equ threadTable + threadTableSize
libraryTableSize        .equ 4 * maxLibraries           ; 4 bytes per entry

signalTable             .equ libraryTable + libraryTableSize
signalTableSize         .equ 4 * maxSignals             ; 4 bytes per entry

fileHandleTable         .equ signalTable + signalTableSize
fileHandleTableSize     .equ 16 * maxFileStreams         ; 16 bytes per entry

kernelTablesSize        .equ threadTableSize + libraryTableSize + signalTableSize + fileHandleTableSize

stateMemory             .equ kernelMem + kernelTablesSize

currentThreadIndex      .equ stateMemory                ; 1 byte
activeThreads           .equ currentThreadIndex + 1     ; 1 byte
loadedLibraries         .equ activeThreads + 1          ; 1 byte
activeSignals           .equ loadedLibraries + 1        ; 1 byte
activeFileStreams       .equ activeSignals + 1          ; 1 byte
lastThreadId            .equ activeFileStreams + 1      ; 1 byte

hwLockIO                .equ lastThreadId + 1           ; 1 byte
hwLockLCD               .equ hwLockIO + 1               ; 1 byte
hwLockKeypad            .equ hwLockLCD + 1              ; 1 byte
hwLockUSB               .equ hwLockKeypad + 1           ; 1 byte

; Misc.
currentContrast         .equ hwLockUSB + 1              ; 1 byte
bcallHook               .equ currentContrast + 1        ; 2 bytes

; Used for line drawing
; TODO: Phase this out
clip_mask               .equ currentContrast + 2        ; 1 byte

color_mode              .equ clip_mask + 1              ; 1 byte

random_seed             .equ color_mode + 1             ; 8 bytes

; This is incremented on timer 1, which is a little over 100 Hz
kernel_current_time     .equ random_seed + 8            ; 2 bytes

; Link assist
io_header_buffer        .equ kernel_current_time + 2    ; 4 bytes
io_header_ix            .equ io_header_buffer + 4       ; 1 byte
io_last_byte_time       .equ io_header_ix + 1           ; 2 bytes
io_bulk_buffer          .equ io_last_byte_time + 2      ; 2 bytes
io_bulk_buffer_bak      .equ io_bulk_buffer + 2         ; 2 bytes
io_bulk_len             .equ io_bulk_buffer_bak + 2     ; 2 bytes
io_bulk_callback        .equ io_bulk_len + 2            ; 2 bytes
io_bulk_callback_thread .equ io_bulk_callback + 2       ; 1 byte

kbd_scan_len            .equ io_bulk_callback_thread + 1; 1 byte
kbd_scan_queue          .equ kbd_scan_len + 1           ; 16 bytes

io_tx_header            .equ kbd_scan_queue + 16        ; 4 bytes
io_tx_header_ix         .equ io_tx_header + 4           ; 1 byte
io_send_queue           .equ io_tx_header_ix + 1        ; 2 bytes
io_send_queue_bak       .equ io_send_queue + 2          ; 2 bytes
io_send_remain          .equ io_send_queue_bak + 2      ; 2 bytes
io_send_callback        .equ io_send_remain + 2         ; 2 bytes
io_send_callback_thread .equ io_send_callback + 2       ; 1 bytes
io_header_handlers      .equ io_send_callback_thread + 1; 2 bytes
io_checksum             .equ io_header_handlers + 2     ; 2 bytes

stateUsed               .equ io_header_handlers + 2 - stateMemory

flashFunctions          .equ stateMemory + stateMemorySize
kernelGarbage           .equ flashFunctions + flashFunctionSize

userMemory              .equ kernelGarbage + kernelGarbageSize
userMemorySize          .equ 0xFFFF - userMemory        ; user memory extends to 0xFFFF
.equ BOOT 0x0000
.equ REBOOT 0x0100
.equ SUSPENDDEVICE 0x0200
.equ MALLOC 0x0300
.equ FREE 0x0400
.equ CALLOC 0x0500
.equ MEMSET 0x0600
.equ MEMCHECK 0x0700
.equ MEMSEEKTOSTART 0x0800
.equ MEMSEEKTOEND 0x0900
.equ REASSIGNMEMORY 0x0A00
.equ LOADLIBRARY 0x0B00
.equ CONTEXTSWITCH 0x0C00
.equ STARTTHREAD 0x0D00
.equ LAUNCHPROGRAM 0x0E00
.equ GETCURRENTTHREADID 0x0F00
.equ EXITTHREAD 0x1000
.equ KILLTHREAD 0x1100
.equ KILLCURRENTTHREAD 0x1200
.equ GETENTRYPOINT 0x1300
.equ SETRETURNPOINT 0x1400
.equ SUSPENDCURRENTTHREAD 0x1500
.equ RESUMETHREAD 0x1600
.equ SETINITIALHL 0x1700
.equ SETINITIALDE 0x1800
.equ CREATESIGNAL 0x1900
.equ READSIGNAL 0x1A00
.equ SETINITIALBC 0x1B00
.equ SETINITIALA 0x1C00
.equ SETINITIALIX 0x1D00
.equ SETINITIALIY 0x1E00
.equ GETTHREADHEADER 0x1F00
.equ CHECKTHREAD 0x2000
.equ WAITKEY 0x2100
.equ GETKEY 0x2200
.equ FLUSHKEYS 0x2300
.equ FASTCOPY 0x2400
.equ LCDDELAY 0x2500
.equ GETBATTERYLEVEL 0x2600
.equ GETLCDLOCK 0x2700
.equ GETKEYPADLOCK 0x2800
.equ GETIOLOCK 0x2900
.equ GETUSBLOCK 0x2A00
.equ HASLCDLOCK 0x2B00
.equ HASKEYPADLOCK 0x2C00
.equ HASIOLOCK 0x2D00
.equ HASUSBLOCK 0x2E00
.equ UNLOCKFLASH 0x2F00
.equ LOCKFLASH 0x3000
.equ COPYFLASHPAGE 0x3100
.equ COPYFLASHEXCEPT 0x3200
.equ COPYSECTORTOSWAP 0x3300
.equ ERASEFLASHSECTOR 0x3400
.equ ERASEFLASHPAGE 0x3500
.equ WRITEFLASHBUFFER 0x3600
.equ WRITEFLASHBYTE 0x3700
.equ ERASESWAPSECTOR 0x3800
.equ FINDFILEENTRY 0x3900
.equ FINDDIRECTORYENTRY 0x3A00
.equ FILEEXISTS 0x3B00
.equ DIRECTORYEXISTS 0x3C00
.equ DELETEFILE 0x3D00
.equ CREATEDIRECTORY 0x3E00
.equ LISTDIRECTORY 0x3F00
.equ CHECKKFS 0x4000
.equ FIXKFS 0x4100
.equ OPENFILEREAD 0x4200
.equ OPENFILEWRITE 0x4300
.equ FLUSH 0x4400
.equ CLOSESTREAM 0x4500
.equ STREAMREADBYTE 0x4600
.equ STREAMREADWORD 0x4700
.equ STREAMREADBUFFER 0x4800
.equ STREAMREADTOEND 0x4900
.equ GETSTREAMINFO 0x4A00
.equ SEEK 0x4B00
.equ ALLOCSCREENBUFFER 0x4C00
.equ FREESCREENBUFFER 0x4D00
.equ CLEARBUFFER 0x4E00
.equ DRAWLINE 0x4F00
.equ RECTOR 0x5000
.equ PUTSPRITEOR 0x5100
.equ PUTSPRITEAND 0x5200
.equ PUTSPRITEXOR 0x5300
.equ PUTSPRITE16XOR 0x5400
.equ PUTSPRITE16OR 0x5500
.equ PUTSPRITE16AND 0x5600
.equ COLORSUPPORTED 0x5700
.equ CLEARCOLORLCD 0x5800
.equ SETLEGACYLCDMODE 0x5900
.equ RESETLEGACYLCDMODE 0x5A00
.equ CHECKLEGACYLCDMODE 0x5B00
.equ COLORLCDON 0x5C00
.equ COLORLCDOFF 0x5D00
.equ COLORLCDWAIT 0x5E00
.equ READLCDREGISTER 0x5F00
.equ WRITELCDREGISTER 0x6000
.equ CLIPCOLORRECTANGLE 0x6100
.equ FULLSCREENWINDOW 0x6200
.equ SETLCDWINDOW 0x6300
.equ CPHLDE 0x6400
.equ CPHLBC 0x6500
.equ CPBCDE 0x6600
.equ SMUL16BY8 0x6700
.equ MUL8BY8 0x6800
.equ MUL16BY8 0x6900
.equ MUL16BY16 0x6A00
.equ MUL32BY8 0x6B00
.equ DIV8BY8 0x6C00
.equ DIV32BY16 0x6D00
.equ SUB16FROM32 0x6E00
.equ DIVHLBYC 0x6F00
.equ DIVACBYDE 0x7000
.equ SDIVACBYDE 0x7100
.equ SMIN 0x7200
.equ SMAX 0x7300
.equ ISIN 0x7400
.equ ICOS 0x7500
.equ GETBOOTCODEVERSIONSTRING 0x7600
.equ HEXTOA 0x7700
.equ HEXTOHL 0x7800
.equ INDIRECT16HL 0x7900
.equ INDIRECT16HLDE 0x7A00
.equ CPHLDE_SORT 0x7B00
.equ SLEEP 0x7C00
.equ GETKERNELMAJORVERSION 0x7D00
.equ GETKERNELMINORVERSION 0x7E00
.equ GETKERNELPATCHNUMBER 0x7F00
.equ GETKERNELCOMMITSSINCETAG 0x8000
.equ GETKERNELSHORTHASH 0x8100
.equ ISKERNELDIRTY 0x8200
.equ ISALPHANUM 0x8300
.equ GETRANDOM 0x8400
.equ STRLEN 0x8500
.equ STRCPY 0x8600
.equ STRCMP 0x8700
.equ STRCMP_SORT 0x8800
.equ STRCHR 0x8900
.equ STRTOI 0x8A00
.equ TOLOWER 0x8B00
.equ TOUPPER 0x8C00
.equ CRC16_INIT 0x8D00
.equ CRC16_UPDATEBYTE 0x8E00
.equ CRC16_UPDATEBUFFER 0x8F00
.equ MUTEXINIT 0x9000
.equ MUTEXLOCK 0x9100
.equ MUTEXUNLOCK 0x9200
.equ CONDINIT 0x9300
.equ CONDWAIT 0x9400
.equ CONDNOTIFYALL 0x9500
.equ CONDNOTIFYONE 0x9600
.equ REALLOC 0x9700
.equ MEMORYAVAILABLE 0x9800
.equ STREAMWRITEBYTE 0x9900
.equ STREAMWRITEWORD 0x9A00
.equ STREAMWRITEBUFFER 0x9B00
.equ CREATESYMLINK 0x9C00
.equ GETSTREAMPOS 0x9D00
.equ GETBOOTPAGE 0x9E00
.equ ADD16TO32 0x9F00
.equ GETNEXTTHREADID 0xA000
.equ GETSCANCODE 0xA100
.equ IOSENDPACKET 0xA200
.equ IOREGISTERHANDLER 0xA300
.equ RENAMEFILE 0xA400
.equ NEWLINE 0x0001
.equ DRAWCHAR 0x0101
.equ DRAWCHARAND 0x0201
.equ DRAWCHARXOR 0x0301
.equ DRAWSTR 0x0401
.equ DRAWSTRAND 0x0501
.equ DRAWSTRXOR 0x0601
.equ WRAPSTR 0x0701
.equ WRAPSTRAND 0x0801
.equ WRAPSTRXOR 0x0901
.equ DRAWHEXA 0x0A01
.equ DRAWDECA 0x0B01
.equ MEASURECHAR 0x0C01
.equ MEASURESTR 0x0D01
.equ DRAWHEXHL 0x0E01
.equ DRAWDECHL 0x0F01
.equ DRAWDECACIX 0x1001
.equ SHA1INIT 0x0002
.equ SHA1CLEAN 0x0102
.equ SHA1ADDBYTE 0x0202
.equ SHA1ADDRANGE 0x0302
.equ SHA1PAD 0x0402
.equ GETTIMEINTICKS 0x0502
.equ SETCLOCK 0x0602
.equ GETTIME 0x0702
.equ CONVERTTIMEFROMTICKS 0x0802
.equ CONVERTTIMETOTICKS 0x0902
.equ RLECOMPRESS 0x0A02
.equ RLEDECOMPRESS 0x0B02
.equ RLECALCULATECOMPRESSEDLENGTH 0x0C02
.equ RLECALCULATEDECOMPRESSEDLENGTH 0x0D02
.equ INTEGERSORT 0x0E02
.equ CALLBACKSORT 0x0F02
.equ GETPIXEL 0x1002
.equ SETPIXEL 0x1102
.equ RESETPIXEL 0x1202
.equ INVERTPIXEL 0x1302
.equ DRAWVLINE 0x1402
.equ RECTXOR 0x1502
.equ RECTAND 0x1602
.equ DRAWVLINEAND 0x1702
.equ CLOCKSUPPORTED 0x1802
.equ ISLEAPYEAR 0x1902
.equ MONTHLENGTH 0x1A02
.equ ITOSTR 0x1B02
.equ ITOFP 0x1C02
.equ STRTOFP 0x1D02
.equ FPTOSTR 0x1E02
.equ FPLDCONST 0x1F02
.equ FPADD 0x2002
.equ FPSUB 0x2102
.equ FPMULPOW10 0x2202
.equ FPAND 0x2302
.equ FPOR 0x2402
.equ FPXOR 0x2502
.equ FPNOT 0x2602
.equ FPNEG 0x2702
.equ FPABS 0x2802
.equ FPCOMPARE 0x2902
.equ FPMIN 0x2A02
.equ FPMAX 0x2B02
.equ FPIPART 0x2C02
.equ FPFPART 0x2D02
.equ FPRAND 0x2E02
